// Add a new section to the layout as the picture displays.
// The boxes are squares of 45px per side (to be converted into rem) and their alignment is performed with flex rules.
// The background color, the color, and the font-size can be handled using the flow control (@for, @if, etc...) and the darken and lighten methods (the numbers have a multiplier equal to 5)
// In particular, you need to create the classes .fs-1rem, .fs-2rem e .fs-3rem using @each
// The added colors are black and white only

// **Suggerimento (da inserire a parte e quindi da rimuovere dal readme)**
// @for $var from 1 to 20 {
// ...
// @if $var == 10 {
// ...

//     }
// }

@use "sass:color";
@use "./dist/vars.scss";
@use "./dist/convert_fun.scss" as f;

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

@mixin article-props(
  $index,
  $color,
  $border_color,
  $font_size: f.cvrt_px(vars.$regular-padding)
) {
  article:nth-child(#{$index}) {
    width: 100%;
    padding: f.cvrt_px(vars.$regular-padding);
    border: f.cvrt_px(vars.$regular-border-w) solid $border_color;
    text-align: center;
    color: $color;
    font-size: $font_size;
  }
}

// background color
// color
@mixin change-bg-font() {
  @for $index from 1 through 20 {
    div:nth-child(#{$index}) {
      color: color.adjust($color: black, $lightness: $index * 5%);
      background-color: color.adjust($color: white, $lightness: $index * -5%);
      @if $index == 10 {
        color: vars.$color-primary;
        background-color: vars.$color-secondary;
      }
    }
  }
}

body {
  .container {
    padding: f.cvrt_px(vars.$regular-padding);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border: f.cvrt_px(vars.$regular-border-w) solid vars.$color-primary;
    gap: f.cvrt_px(vars.$regular-padding);

    &__h1 {
      color: vars.$color-tertiary;
      text-decoration: f.cvrt_px(vars.$regular-border-w) underline
        vars.$color-secondary;
    }

    &__h2 {
      // Can't use the parent selector in @extend
      @extend .container__h1;
      padding: f.cvrt_px(vars.$regular-padding);
      text-decoration: none;
      border: f.cvrt_px(vars.$regular-border-w) solid vars.$color-primary;
    }

    section:nth-of-type(1) {
      display: flex;
      @include article-props(
        $index: 1,
        $color: vars.$color-primary,
        $border_color: vars.$color-tertiary
      );

      @include article-props(
        $index: 2,
        $color: vars.$color-secondary,
        $border_color: vars.$color-tertiary
      );

      @include article-props(
        $index: 3,
        $color: vars.$color-primary,
        $border_color: vars.$color-tertiary
      );

      @include article-props(
        $index: 4,
        $color: vars.$color-secondary,
        $border_color: vars.$color-tertiary
      );
    }

    section:nth-of-type(2) {
      @include change-bg-font();

      width: 100%;
      display: flex;
      justify-content: space-between;
      div {
        display: flex;
        width: f.cvrt_px(45);
        height: f.cvrt_px(45);
        border: 2px solid vars.$color-primary;
      }

      $fs_index: 1, 2, 3;
      @each $i in $fs_index {
        .fs-#{$i + rem} {
          font-size: f.cvrt_px(16 * $i);
          align-items: flex-start;
          @if $i == 3 {
            // Added line-height and letter-spacing to make sure the big numbers stay inside the box
            align-items: initial;
            line-height: 1;
            letter-spacing: f.cvrt_px(-5);
          }
        }
      }
    }

    section:nth-of-type(3) {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      @include article-props(
        $index: 1,
        $color: vars.$color-tertiary,
        $border_color: vars.$color-secondary,
        $font_size: f.cvrt_px(vars.$footer-defualt-font)
      );
    }
  }
}
